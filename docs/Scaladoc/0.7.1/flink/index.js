Index.PACKAGES = {"net.sansa_stack.inference.flink" : [{"name" : "net.sansa_stack.inference.flink.RDFGraphMaterializer", "shortDescription" : "A class to compute the materialization of a given RDF graph for a given reasoning profile.", "object" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html", "members_object" : [{"label" : "parser", "tail" : ": OptionParser[Config]", "member" : "net.sansa_stack.inference.flink.RDFGraphMaterializer.parser", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#parser:scopt.OptionParser[net.sansa_stack.inference.flink.RDFGraphMaterializer.Config]", "kind" : "val"}, {"label" : "profilesRead", "tail" : ": Read[rules.ReasoningProfile.Value]", "member" : "net.sansa_stack.inference.flink.RDFGraphMaterializer.profilesRead", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#profilesRead:scopt.Read[net.sansa_stack.inference.rules.ReasoningProfile.Value]", "kind" : "implicit val"}, {"label" : "Config", "tail" : "", "member" : "net.sansa_stack.inference.flink.RDFGraphMaterializer.Config", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#ConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "run", "tail" : "(args: Array[String], input: Seq[URI], output: URI, profile: ReasoningProfile, writeToSingleFile: Boolean, sortedOutput: Boolean, propertiesFile: File, jobName: String): Unit", "member" : "net.sansa_stack.inference.flink.RDFGraphMaterializer.run", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#run(args:Array[String],input:Seq[java.net.URI],output:java.net.URI,profile:net.sansa_stack.inference.rules.ReasoningProfile.ReasoningProfile,writeToSingleFile:Boolean,sortedOutput:Boolean,propertiesFile:java.io.File,jobName:String):Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "net.sansa_stack.inference.flink.RDFGraphMaterializer.main", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/RDFGraphMaterializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "net.sansa_stack.inference.flink.extraction" : [{"name" : "net.sansa_stack.inference.flink.extraction.OWLHorstSchemaExtractor", "shortDescription" : "An extractor of the schema for OWL Horst.", "members_class" : [{"member" : "net.sansa_stack.inference.flink.extraction.OWLHorstSchemaExtractor#<init>", "error" : "unsupported entity"}, {"label" : "extract", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.extract", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#extract(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extract", "tail" : "(graph: RDFGraph): RDFGraph", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.extract", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#extract(graph:net.sansa_stack.inference.flink.data.RDFGraph):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "objectsFilter", "tail" : ": (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.objectsFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#objectsFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "val"}, {"label" : "predicatesFilter", "tail" : ": (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.predicatesFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#predicatesFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "val"}, {"label" : "subjectsFilter", "tail" : "(): (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.subjectsFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#subjectsFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#error(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#error(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#error(msg:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#warn(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#warn(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#warn(msg:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#info(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#info(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#info(msg:=>String):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#debug(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#debug(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#debug(msg:=>String):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#trace(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#trace(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#trace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "net.sansa_stack.inference.utils.Logging.logName", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#logName:String", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "net.sansa_stack.inference.utils.Logging.log", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/sansa_stack\/inference\/flink\/extraction\/OWLHorstSchemaExtractor.html", "kind" : "class"}, {"name" : "net.sansa_stack.inference.flink.extraction.RDFSSchemaExtractor", "shortDescription" : "An extractor of the schema for RDFS.", "object" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html", "members_class" : [{"member" : "net.sansa_stack.inference.flink.extraction.RDFSSchemaExtractor#<init>", "error" : "unsupported entity"}, {"label" : "extract", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.extract", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#extract(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extract", "tail" : "(graph: RDFGraph): RDFGraph", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.extract", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#extract(graph:net.sansa_stack.inference.flink.data.RDFGraph):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "objectsFilter", "tail" : ": (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.objectsFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#objectsFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "val"}, {"label" : "predicatesFilter", "tail" : ": (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.predicatesFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#predicatesFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "val"}, {"label" : "subjectsFilter", "tail" : "(): (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.subjectsFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#subjectsFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#error(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#error(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#error(msg:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#warn(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#warn(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#warn(msg:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#info(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#info(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#info(msg:=>String):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#debug(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#debug(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#debug(msg:=>String):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#trace(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#trace(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#trace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "net.sansa_stack.inference.utils.Logging.logName", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#logName:String", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "net.sansa_stack.inference.utils.Logging.log", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(): RDFSSchemaExtractor", "member" : "net.sansa_stack.inference.flink.extraction.RDFSSchemaExtractor.apply", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#apply:net.sansa_stack.inference.flink.extraction.RDFSSchemaExtractor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/sansa_stack\/inference\/flink\/extraction\/RDFSSchemaExtractor.html", "kind" : "class"}, {"name" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor", "shortDescription" : "", "members_class" : [{"label" : "extract", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.extract", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#extract(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extract", "tail" : "(graph: RDFGraph): RDFGraph", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.extract", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#extract(graph:net.sansa_stack.inference.flink.data.RDFGraph):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "objectsFilter", "tail" : ": (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.objectsFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#objectsFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "val"}, {"label" : "predicatesFilter", "tail" : ": (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.predicatesFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#predicatesFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "val"}, {"label" : "subjectsFilter", "tail" : "(): (Triple) ⇒ Boolean", "member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor.subjectsFilter", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#subjectsFilter:org.apache.jena.graph.Triple=>Boolean", "kind" : "def"}, {"member" : "net.sansa_stack.inference.flink.extraction.SchemaExtractor#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#error(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#error(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#error(msg:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#warn(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#warn(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#warn(msg:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#info(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#info(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#info(msg:=>String):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#debug(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#debug(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#debug(msg:=>String):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#trace(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#trace(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#trace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "net.sansa_stack.inference.utils.Logging.logName", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#logName:String", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "net.sansa_stack.inference.utils.Logging.log", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/sansa_stack\/inference\/flink\/extraction\/SchemaExtractor.html", "kind" : "class"}], "net.sansa_stack.inference.flink.utils" : [{"name" : "net.sansa_stack.inference.flink.utils.DataSetUtils", "shortDescription" : "Some utility operations on Flink DataSets.", "object" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html", "members_object" : [{"label" : "DataSetOps", "tail" : "", "member" : "net.sansa_stack.inference.flink.utils.DataSetUtils.DataSetOps", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#DataSetOps[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/utils\/DataSetUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "net.sansa_stack.inference.flink.utils.MinusCoGroupFunction", "shortDescription" : "", "members_class" : [{"label" : "coGroup", "tail" : "(first: Iterable[T], second: Iterable[T], out: Collector[T]): Unit", "member" : "net.sansa_stack.inference.flink.utils.MinusCoGroupFunction.coGroup", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#coGroup(first:Iterable[T],second:Iterable[T],out:org.apache.flink.util.Collector[T]):Unit", "kind" : "def"}, {"member" : "net.sansa_stack.inference.flink.utils.MinusCoGroupFunction#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/sansa_stack\/inference\/flink\/utils\/MinusCoGroupFunction.html", "kind" : "class"}], "net.sansa_stack.inference" : [], "net" : [], "net.sansa_stack.inference.flink.data" : [{"name" : "net.sansa_stack.inference.flink.data.RDFGraph", "shortDescription" : "A data structure that comprises a set of triples.", "members_case class" : [{"label" : "size", "tail" : ": Long", "member" : "net.sansa_stack.inference.flink.data.RDFGraph.size", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#size:Long", "kind" : "lazy val"}, {"label" : "subtract", "tail" : "(other: RDFGraph): RDFGraph", "member" : "net.sansa_stack.inference.flink.data.RDFGraph.subtract", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#subtract(other:net.sansa_stack.inference.flink.data.RDFGraph):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "union", "tail" : "(other: RDFGraph): RDFGraph", "member" : "net.sansa_stack.inference.flink.data.RDFGraph.union", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#union(other:net.sansa_stack.inference.flink.data.RDFGraph):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "find", "tail" : "(triple: Triple): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.data.RDFGraph.find", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#find(triple:org.apache.jena.graph.Triple):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "find", "tail" : "(s: Option[Node], p: Option[Node], o: Option[Node]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.data.RDFGraph.find", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#find(s:Option[org.apache.jena.graph.Node],p:Option[org.apache.jena.graph.Node],o:Option[org.apache.jena.graph.Node]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "tripleKeyFct", "tail" : ": (Triple) ⇒ Int", "member" : "net.sansa_stack.inference.flink.data.RDFGraph.tripleKeyFct", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#tripleKeyFct:org.apache.jena.graph.Triple=>Int", "kind" : "val"}, {"member" : "net.sansa_stack.inference.flink.data.RDFGraph#<init>", "error" : "unsupported entity"}, {"label" : "triples", "tail" : ": DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.data.RDFGraph.triples", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraph.html", "kind" : "case class"}, {"name" : "net.sansa_stack.inference.flink.data.RDFGraphLoader", "shortDescription" : "", "object" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "net.sansa_stack.inference.flink.data.RDFGraphLoader.main", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "loadFromDisk", "tail" : "(paths: Seq[URI], env: ExecutionEnvironment): RDFGraph", "member" : "net.sansa_stack.inference.flink.data.RDFGraphLoader.loadFromDisk", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#loadFromDisk(paths:Seq[java.net.URI],env:org.apache.flink.api.scala.ExecutionEnvironment):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "loadFromDisk", "tail" : "(path: URI, env: ExecutionEnvironment): RDFGraph", "member" : "net.sansa_stack.inference.flink.data.RDFGraphLoader.loadFromDisk", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#loadFromDisk(path:java.net.URI,env:org.apache.flink.api.scala.ExecutionEnvironment):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "loadFromDisk", "tail" : "(path: String, env: ExecutionEnvironment): RDFGraph", "member" : "net.sansa_stack.inference.flink.data.RDFGraphLoader.loadFromDisk", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#loadFromDisk(path:String,env:org.apache.flink.api.scala.ExecutionEnvironment):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "pathURIsConverter", "tail" : "(uris: Seq[URI]): String", "member" : "net.sansa_stack.inference.flink.data.RDFGraphLoader.pathURIsConverter", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#pathURIsConverter(uris:Seq[java.net.URI]):String", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphLoader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "net.sansa_stack.inference.flink.data.RDFGraphWriter", "shortDescription" : "Writes an RDF graph to disk.", "object" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html", "members_object" : [{"label" : "convertToModel", "tail" : "(graph: RDFGraph): Model", "member" : "net.sansa_stack.inference.flink.data.RDFGraphWriter.convertToModel", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#convertToModel(graph:net.sansa_stack.inference.flink.data.RDFGraph):org.apache.jena.rdf.model.Model", "kind" : "def"}, {"label" : "writeToDisk", "tail" : "(graph: RDFGraph, path: URI, singleFile: Boolean, sorted: Boolean): Unit", "member" : "net.sansa_stack.inference.flink.data.RDFGraphWriter.writeToDisk", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#writeToDisk(graph:net.sansa_stack.inference.flink.data.RDFGraph,path:java.net.URI,singleFile:Boolean,sorted:Boolean):Unit", "kind" : "def"}, {"label" : "writeToFile", "tail" : "(graph: RDFGraph, path: String): Unit", "member" : "net.sansa_stack.inference.flink.data.RDFGraphWriter.writeToFile", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#writeToFile(graph:net.sansa_stack.inference.flink.data.RDFGraph,path:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/data\/RDFGraphWriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "net.sansa_stack.inference.flink.forwardchaining" : [{"name" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner", "members_trait" : [{"label" : "extractTriples", "tail" : "(triples: DataSet[Triple], subject: Option[Node], predicate: Option[Node], obj: Option[Node]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#extractTriples(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],subject:Option[org.apache.jena.graph.Node],predicate:Option[org.apache.jena.graph.Node],obj:Option[org.apache.jena.graph.Node]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extractTriples", "tail" : "(triples: DataSet[Triple], predicate: Node): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#extractTriples(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extractTriples", "tail" : "(triples: Set[Triple], predicate: Node): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#extractTriples(triples:scala.collection.mutable.Set[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):scala.collection.mutable.Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "apply", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.apply", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#apply(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosureOptSemiNaive", "tail" : "(triples: DataSet[Triple], predicate: Node): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosureOptSemiNaive", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#computeTransitiveClosureOptSemiNaive(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(edges: DataSet[(A, A)])(arg0: ClassTag[A], arg1: TypeInformation[A]): DataSet[(A, A)]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#computeTransitiveClosure[A](edges:org.apache.flink.api.scala.DataSet[(A,A)])(implicitevidence$1:scala.reflect.ClassTag[A],implicitevidence$2:org.apache.flink.api.common.typeinfo.TypeInformation[A]):org.apache.flink.api.scala.DataSet[(A,A)]", "kind" : "def"}, {"label" : "computeTransitiveClosureOpt", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosureOpt", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#computeTransitiveClosureOpt(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#computeTransitiveClosure(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "addTransitive", "tail" : "(triples: Set[Triple]): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.addTransitive", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#addTransitive(triples:Set[org.apache.jena.graph.Triple]):Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(triples: Set[Triple]): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#computeTransitiveClosure(triples:Set[org.apache.jena.graph.Triple]):Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "nodeKeyFct", "tail" : ": (Node) ⇒ Int", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.nodeKeyFct", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#nodeKeyFct:org.apache.jena.graph.Node=>Int", "kind" : "val"}, {"label" : "profile", "tail" : "(block: ⇒ R): R", "member" : "net.sansa_stack.inference.utils.Profiler.profile", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#profile[R](block:=>R):R", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#error(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#error(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#error(msg:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#warn(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#warn(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#warn(msg:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#info(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#info(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#info(msg:=>String):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#debug(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#debug(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#debug(msg:=>String):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#trace(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#trace(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#trace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "net.sansa_stack.inference.utils.Logging.logName", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#logName:String", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "net.sansa_stack.inference.utils.Logging.log", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(graph: RDFGraph): RDFGraph", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.apply", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html#apply(graph:net.sansa_stack.inference.flink.data.RDFGraph):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "abstract def"}], "shortDescription" : "A forward chaining based reasoner.", "trait" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasoner.html", "kind" : "trait"}, {"name" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst", "shortDescription" : "A forward chaining implementation of the OWL Horst entailment regime.", "members_class" : [{"label" : "deduplicate", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst.deduplicate", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#deduplicate(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "apply", "tail" : "(graph: RDFGraph): RDFGraph", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst.apply", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#apply(graph:net.sansa_stack.inference.flink.data.RDFGraph):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "fct2", "tail" : ": (((Node, Node), Node), ((Node, Node), Node)) ⇒ (Node, Node)", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst.fct2", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#fct2:(((org.apache.jena.graph.Node,org.apache.jena.graph.Node),org.apache.jena.graph.Node),((org.apache.jena.graph.Node,org.apache.jena.graph.Node),org.apache.jena.graph.Node))=>(org.apache.jena.graph.Node,org.apache.jena.graph.Node)", "kind" : "val"}, {"label" : "fct1", "tail" : ": (((Node, Node), Node), ((Node, Node), Nil.type)) ⇒ (Node, Node)", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst.fct1", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#fct1:(((org.apache.jena.graph.Node,org.apache.jena.graph.Node),org.apache.jena.graph.Node),((org.apache.jena.graph.Node,org.apache.jena.graph.Node),scala.collection.immutable.Nil.type))=>(org.apache.jena.graph.Node,org.apache.jena.graph.Node)", "kind" : "val"}, {"label" : "nodePairKVKeyFct2", "tail" : ": (((Node, Node), Nil.type)) ⇒ Int", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst.nodePairKVKeyFct2", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#nodePairKVKeyFct2:(((org.apache.jena.graph.Node,org.apache.jena.graph.Node),scala.collection.immutable.Nil.type))=>Int", "kind" : "val"}, {"label" : "nodePairKVKeyFct", "tail" : ": (((Node, Node), Node)) ⇒ Int", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst.nodePairKVKeyFct", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#nodePairKVKeyFct:(((org.apache.jena.graph.Node,org.apache.jena.graph.Node),org.apache.jena.graph.Node))=>Int", "kind" : "val"}, {"label" : "nodePairKeyFct", "tail" : ": ((Node, Node)) ⇒ Int", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst.nodePairKeyFct", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#nodePairKeyFct:((org.apache.jena.graph.Node,org.apache.jena.graph.Node))=>Int", "kind" : "val"}, {"label" : "tripleKeyFct", "tail" : ": (Triple) ⇒ Int", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst.tripleKeyFct", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#tripleKeyFct:org.apache.jena.graph.Triple=>Int", "kind" : "val"}, {"member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerOWLHorst#<init>", "error" : "unsupported entity"}, {"label" : "extractTriples", "tail" : "(triples: DataSet[Triple], subject: Option[Node], predicate: Option[Node], obj: Option[Node]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#extractTriples(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],subject:Option[org.apache.jena.graph.Node],predicate:Option[org.apache.jena.graph.Node],obj:Option[org.apache.jena.graph.Node]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extractTriples", "tail" : "(triples: DataSet[Triple], predicate: Node): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#extractTriples(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extractTriples", "tail" : "(triples: Set[Triple], predicate: Node): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#extractTriples(triples:scala.collection.mutable.Set[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):scala.collection.mutable.Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "apply", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.apply", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#apply(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosureOptSemiNaive", "tail" : "(triples: DataSet[Triple], predicate: Node): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosureOptSemiNaive", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#computeTransitiveClosureOptSemiNaive(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(edges: DataSet[(A, A)])(arg0: ClassTag[A], arg1: TypeInformation[A]): DataSet[(A, A)]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#computeTransitiveClosure[A](edges:org.apache.flink.api.scala.DataSet[(A,A)])(implicitevidence$1:scala.reflect.ClassTag[A],implicitevidence$2:org.apache.flink.api.common.typeinfo.TypeInformation[A]):org.apache.flink.api.scala.DataSet[(A,A)]", "kind" : "def"}, {"label" : "computeTransitiveClosureOpt", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosureOpt", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#computeTransitiveClosureOpt(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#computeTransitiveClosure(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "addTransitive", "tail" : "(triples: Set[Triple]): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.addTransitive", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#addTransitive(triples:Set[org.apache.jena.graph.Triple]):Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(triples: Set[Triple]): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#computeTransitiveClosure(triples:Set[org.apache.jena.graph.Triple]):Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "nodeKeyFct", "tail" : ": (Node) ⇒ Int", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.nodeKeyFct", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#nodeKeyFct:org.apache.jena.graph.Node=>Int", "kind" : "val"}, {"label" : "profile", "tail" : "(block: ⇒ R): R", "member" : "net.sansa_stack.inference.utils.Profiler.profile", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#profile[R](block:=>R):R", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#error(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#error(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#error(msg:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#warn(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#warn(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#warn(msg:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#info(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#info(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#info(msg:=>String):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#debug(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#debug(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#debug(msg:=>String):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#trace(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#trace(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#trace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "net.sansa_stack.inference.utils.Logging.logName", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#logName:String", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "net.sansa_stack.inference.utils.Logging.log", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerOWLHorst.html", "kind" : "class"}, {"name" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS", "shortDescription" : "A forward chaining implementation of the RDFS entailment regime.", "members_class" : [{"label" : "SubClassOfFlatMapFunction", "tail" : "", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS.SubClassOfFlatMapFunction", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#SubClassOfFlatMapFunctionextendsRichFlatMapFunction[org.apache.jena.graph.Triple,org.apache.jena.graph.Triple]", "kind" : "class"}, {"label" : "SubClassOfFilterFunction", "tail" : "", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS.SubClassOfFilterFunction", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#SubClassOfFilterFunctionextendsRichFilterFunction[org.apache.jena.graph.Triple]", "kind" : "class"}, {"label" : "SchemaTriplesFilter", "tail" : "", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS.SchemaTriplesFilter", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#SchemaTriplesFilter", "kind" : "object"}, {"label" : "apply", "tail" : "(graph: RDFGraph): RDFGraph", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS.apply", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#apply(graph:net.sansa_stack.inference.flink.data.RDFGraph):net.sansa_stack.inference.flink.data.RDFGraph", "kind" : "def"}, {"label" : "useSchemaBroadCasting", "tail" : ": Boolean", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS.useSchemaBroadCasting", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#useSchemaBroadCasting:Boolean", "kind" : "var"}, {"label" : "extractSchemaTriplesInAdvance", "tail" : ": Boolean", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS.extractSchemaTriplesInAdvance", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#extractSchemaTriplesInAdvance:Boolean", "kind" : "var"}, {"label" : "level", "tail" : ": RDFSLevel", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS.level", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#level:net.sansa_stack.inference.rules.RDFSLevel.RDFSLevel", "kind" : "var"}, {"member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasonerRDFS#<init>", "error" : "unsupported entity"}, {"label" : "extractTriples", "tail" : "(triples: DataSet[Triple], subject: Option[Node], predicate: Option[Node], obj: Option[Node]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#extractTriples(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],subject:Option[org.apache.jena.graph.Node],predicate:Option[org.apache.jena.graph.Node],obj:Option[org.apache.jena.graph.Node]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extractTriples", "tail" : "(triples: DataSet[Triple], predicate: Node): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#extractTriples(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "extractTriples", "tail" : "(triples: Set[Triple], predicate: Node): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.extractTriples", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#extractTriples(triples:scala.collection.mutable.Set[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):scala.collection.mutable.Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "apply", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.ForwardRuleReasoner.apply", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#apply(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosureOptSemiNaive", "tail" : "(triples: DataSet[Triple], predicate: Node): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosureOptSemiNaive", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#computeTransitiveClosureOptSemiNaive(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(edges: DataSet[(A, A)])(arg0: ClassTag[A], arg1: TypeInformation[A]): DataSet[(A, A)]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#computeTransitiveClosure[A](edges:org.apache.flink.api.scala.DataSet[(A,A)])(implicitevidence$1:scala.reflect.ClassTag[A],implicitevidence$2:org.apache.flink.api.common.typeinfo.TypeInformation[A]):org.apache.flink.api.scala.DataSet[(A,A)]", "kind" : "def"}, {"label" : "computeTransitiveClosureOpt", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosureOpt", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#computeTransitiveClosureOpt(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#computeTransitiveClosure(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "addTransitive", "tail" : "(triples: Set[Triple]): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.addTransitive", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#addTransitive(triples:Set[org.apache.jena.graph.Triple]):Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(triples: Set[Triple]): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#computeTransitiveClosure(triples:Set[org.apache.jena.graph.Triple]):Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "nodeKeyFct", "tail" : ": (Node) ⇒ Int", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.nodeKeyFct", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#nodeKeyFct:org.apache.jena.graph.Node=>Int", "kind" : "val"}, {"label" : "profile", "tail" : "(block: ⇒ R): R", "member" : "net.sansa_stack.inference.utils.Profiler.profile", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#profile[R](block:=>R):R", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#error(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#error(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#error(msg:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#warn(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#warn(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#warn(msg:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#info(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#info(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#info(msg:=>String):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#debug(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#debug(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#debug(msg:=>String):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#trace(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#trace(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#trace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "net.sansa_stack.inference.utils.Logging.logName", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#logName:String", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "net.sansa_stack.inference.utils.Logging.log", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/ForwardRuleReasonerRDFS.html", "kind" : "class"}, {"name" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner", "members_trait" : [{"label" : "computeTransitiveClosureOptSemiNaive", "tail" : "(triples: DataSet[Triple], predicate: Node): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosureOptSemiNaive", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#computeTransitiveClosureOptSemiNaive(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple],predicate:org.apache.jena.graph.Node):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(edges: DataSet[(A, A)])(arg0: ClassTag[A], arg1: TypeInformation[A]): DataSet[(A, A)]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#computeTransitiveClosure[A](edges:org.apache.flink.api.scala.DataSet[(A,A)])(implicitevidence$1:scala.reflect.ClassTag[A],implicitevidence$2:org.apache.flink.api.common.typeinfo.TypeInformation[A]):org.apache.flink.api.scala.DataSet[(A,A)]", "kind" : "def"}, {"label" : "computeTransitiveClosureOpt", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosureOpt", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#computeTransitiveClosureOpt(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(triples: DataSet[Triple]): DataSet[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#computeTransitiveClosure(triples:org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]):org.apache.flink.api.scala.DataSet[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "addTransitive", "tail" : "(triples: Set[Triple]): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.addTransitive", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#addTransitive(triples:Set[org.apache.jena.graph.Triple]):Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "computeTransitiveClosure", "tail" : "(triples: Set[Triple]): Set[Triple]", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.computeTransitiveClosure", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#computeTransitiveClosure(triples:Set[org.apache.jena.graph.Triple]):Set[org.apache.jena.graph.Triple]", "kind" : "def"}, {"label" : "nodeKeyFct", "tail" : ": (Node) ⇒ Int", "member" : "net.sansa_stack.inference.flink.forwardchaining.TransitiveReasoner.nodeKeyFct", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#nodeKeyFct:org.apache.jena.graph.Node=>Int", "kind" : "val"}, {"label" : "profile", "tail" : "(block: ⇒ R): R", "member" : "net.sansa_stack.inference.utils.Profiler.profile", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#profile[R](block:=>R):R", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#error(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#error(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.error", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#error(msg:=>String):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#warn(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#warn(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "warn", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.warn", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#warn(msg:=>String):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#info(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#info(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "info", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.info", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#info(msg:=>String):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#debug(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#debug(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "debug", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.debug", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#debug(msg:=>String):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, o: Any, os: Any*): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#trace(msg:=>String,o:Any,os:Any*):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String, e: Throwable): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#trace(msg:=>String,e:Throwable):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: ⇒ String): Unit", "member" : "net.sansa_stack.inference.utils.Logging.trace", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#trace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "net.sansa_stack.inference.utils.Logging.logName", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#logName:String", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "net.sansa_stack.inference.utils.Logging.log", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "An engine to compute the transitive closure (TC) for a set of triples given in several datastructures.", "trait" : "net\/sansa_stack\/inference\/flink\/forwardchaining\/TransitiveReasoner.html", "kind" : "trait"}], "net.sansa_stack" : []};